@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@700&family=Roboto&display=swap');

/* 
Reset CSS para remover os estilos padrão que 
foram injetados pelo navegador.
*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* 
Cor de fundo da aplicação e posição do conteúdo.
*/
body {
    background: #FFFFFF;
    display: flex;
    justify-content: center;
}

/* 
Posicionei todo o conteúdo no centro usando a posição relativa 
para ter a liberdade de posicionar o conteúdo na página e com margem no auto 
tornando o conteúdo centralizado.
*/
.container {
    position: absolute;
    width: 365px;
    height: 588px;
    margin: auto;
    background: linear-gradient(180deg, #EEEEEE 0%, #FFFFFF 100%);
}

/* 
o uso do display:flex foi para organizar os itens filhos 
em ordem vertical com flex-direction no modo de coluna. Para centralizar os 
itens foi align-items e para distanciar os itens do topo do site usei margin-top
e para separar os itens uns dos outros pelo gap.
*/
.header {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 62px;
    gap: 5px;
}

.title-header {
    color: #EF6C00;
    font-family: 'Montserrat', sans-serif;
    font-weight: 700;
    font-size: 24px;
    line-height: 29.26px;
    letter-spacing: -1px;
    text-transform: uppercase;
}

/* 
Criação da linha de separação para a classe de cabeçalho e a classe de conteúdo.
*/
.underline-header {
    width: 205px;
    height: 1px;
    background: #CFCFCF;
    transform: matrix(1, 0, 0, -1, 0, 0);
}

/* 
Para itens da classe "conteudo" serem posicionados verticalmente e centralizados.
*/
.main {
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* 
Para o resultado, fica invisível no início da aplicação.
*/
#result {
    visibility: hidden;
}

/* 
Distância do final da classe de cabeçalho até o início da classe de conteúdo. 
*/
.result-container{
    margin-top: 90px;
}

.result-container-paragraph {
    color: #EF6C00;
    font-family: 'Montserrat', sans-serif;
    font-size: 16px;
    line-height: 20px;
    letter-spacing: -1px;
}

.primary-container {
    margin-top: 16px;
}

.main-content-display {
    position: relative;
    float: left;
    width: 80px;
    height: 125px;
}

/* 
identificador do display 2 e display 3 são definidos como "none" 
para ocultar os displays, mas quando o usuário insere um valor acima de 
um dígitos, no arquivo script.js, há uma estrutura de seleção que irá 
transformar este display "none" em "block" dependendo de quantos dígitos 
o usuário insere na entrada com um máximo de 3 dígitos.
*/
#display-2 {
    display: none;
}

#display-3 {
    display: none;
}

/*
A criação do segmento  foi utilizado a criação de uma borda com as 
especificações de largura e comprimento no figma. pesquisando o 
funcionamento o display de 7 segmentos. no caso esse display ele 
funciona com que cada barra de LED do segmento corresponde a uma 
letra e com isso. eu fui desenvolvendo barra por barra de LED da 
Barra A até a Barra G, sendo que na Barra G para o design ficar 
igual ao que foi passado na prova. tive que cria um reflexo da 
Barra G. sendo que barra A, G e D são horizontais e barra B, C, 
E  e F verticais.
*/
.main-content-display .shape-line-a {
    width: 68.48px;
    left: 0px;
    border-top: 15px solid #262A34;
    border-left: 15px solid transparent;
    border-right: 15px solid transparent;
    border-radius: 8px;
    top: 0;
}

.main-content-display .shape-line-d {
    position: absolute;
    margin-top: -15px;
    width: 68.48px;
    left: 0px;
    border-bottom: 15px solid #262A34;
    border-left: 15px solid transparent;
    border-right: 15px solid transparent;
    border-radius: 8px;
    top: 127px;
}

.main-content-display .shape-line-g {
    position: absolute;
    margin-top: -14px;
    width: 63px;
    left: 2.5px;
    border-bottom: 11px solid #262A34;
    border-left: 12px solid transparent;
    border-right: 12px solid transparent;
    top: 66.25px;
}

.main-content-display .shape-line-g .shape-line-mirror {
    position: absolute;
    top: 11px;
    left: -12px;
    right: -12px;
    border-top: 11px solid #262A34;
    border-left: 12px solid transparent;
    border-right: 12px solid transparent;
}

.main-content-display .shape-line-b {
    position: absolute;
    height: 63.39px;
    width: 0;
    border-right: 15px solid #262A34;
    border-top: 15px solid transparent;
    border-bottom: 15px solid transparent;
    border-radius: 8px;
    top: 1.5px;
    left: 54px;
}

.main-content-display .shape-line-c {
    position: absolute;
    height: 63.39px;
    width: 0;
    border-right: 15px solid #262A34;
    border-top: 15px solid transparent;
    border-bottom: 15px solid transparent;
    border-radius: 8px;
    top: 62px;
    left: 54px;
}

.main-content-display .shape-line-e {
    position: absolute;
    height: 63.39px;
    border-left: 15px solid #262A34;
    border-top: 15px solid transparent;
    border-bottom: 15px solid transparent;
    border-radius: 8px;
    top: 62px;
    left: -1px;
}

.main-content-display .shape-line-f {
    position: absolute;
    height: 63.39px;
    border-left: 15px solid #262A34;
    border-top: 15px solid transparent;
    border-bottom: 15px solid transparent;
    border-radius: 8px;
    top: 1.5px;
    left: -1px;
}

.display-num-0 .shape-line-g {
    opacity: 0.1;
}

.display-num-1 .shape-line-a,
.display-num-1 .shape-line-d,
.display-num-1 .shape-line-e,
.display-num-1 .shape-line-f,
.display-num-1 .shape-line-g {
    opacity: 0.1;
    filter: alpha(opacity=10);
}

.display-num-2 .shape-line-c,
.display-num-2 .shape-line-f {
    opacity: 0.1;
}

.display-num-3 .shape-line-e,
.display-num-3 .shape-line-f {
    opacity: 0.1;
}

.display-num-4 .shape-line-a,
.display-num-4 .shape-line-d,
.display-num-4 .shape-line-e {
    opacity: 0.1;
}

.display-num-5 .shape-line-b,
.display-num-5 .shape-line-e {
    opacity: 0.1;
}

.display-num-6 .shape-line-b {
    opacity: 0.1;
}

.display-num-7 .shape-line-d,
.display-num-7 .shape-line-e,
.display-num-7 .shape-line-f,
.display-num-7 .shape-line-g {
    opacity: 0.1;
}

.display-num-9 .shape-line-e {
    opacity: 0.1;
}

/* 
Botão nova partida 

Distância do final da classe de conteudo-principal até o início da classe de conteudo-nova-partida. 
*/
.container-new-game {
    margin-top: 56px;
    display: block;
}

#new-game {
    visibility: hidden;
}

.container-new-game-button {
    padding: 0;
    margin: 0;
    width: 130px;
    height: 42px;
    border: none;
    border-radius: 4px;
    font-weight: 700;
    transition-duration: 60s;
    background-image: linear-gradient( to bottom, #5C6068,#989899);
    color: #FFFFFF;
    background-size: cover;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    cursor: pointer;
}

.container-new-game-button:hover {
  border: 1px solid #000;
}

/* 
|Container Input do usuario 

*/
.content-input-box {
    margin-top: 73px;
    margin-bottom: 31px;
}

.content-input-numeric {
    display: flex;
    width: 298px;
    height: 42px;
    justify-content: space-around;
    align-items: center;
}

.content-input-numeric-input {
    width: 214px;
    height: 42px;
    background-color: #FFFFFF;
    border: 1px solid #CFCFCF;
    border-radius: 4px;
    padding-left: 8px;
}

.content-input-numeric-input:focus {
    outline: none;
    border: 1px solid #EF6C00;
}

.content-input-numeric-input::placeholder {
    color: #9E9E9E;
    font-family: 'Roboto', sans-serif;
    font-style: normal;
    font-weight: normal;
    font-size: 12px;
    line-height: 14px;

    width: 80px;
    height: 14px;
}

.content-input-numeric-button {
    width: 71px;
    height: 42px;
    background-color: #EF6C00;
    border: 1px solid #CFCFCF;
    border-radius: 4px;

    color: #FFFFFF;
    font-family: 'Montserrat', sans-serif;
    font-style: normal;
    font-weight: bold;
    font-size: 14px;
    line-height: 20px;
    text-align: center;
    letter-spacing: -1px;
    text-transform: uppercase;
}

.content-input-numeric-button:hover {
    border: 1px solid #EF6C00;
}